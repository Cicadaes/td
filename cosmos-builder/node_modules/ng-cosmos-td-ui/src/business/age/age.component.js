"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
const core_1 = require("@angular/core");
let AgeComponent = class AgeComponent {
    constructor() {
        this.barWidth = 40;
        this.xAxisData = [];
        this.xAxis2Data = [];
        this.seriesData = [];
    }
    set cmData(columnData) {
        this.data = {};
        this.xAxisData = [];
        this.xAxis2Data = [];
        this.seriesData = [];
        this.rich = {
            value: {
                lineHeight: 30,
                align: 'center'
            }
        };
        for (let i = 0; i < columnData.length; i++) {
            this.xAxisData.push(columnData[i].sort);
            this.xAxis2Data.push(columnData[i].value);
            this.data[columnData[i].sort] = columnData[i];
            this.rich[columnData[i].sort] = {
                width: this.barWidth * 60 / 100,
                height: 40,
                align: 'center'
            };
            if (columnData[i].color && columnData[i].color.length) {
                let item = {
                    value: columnData[i].value,
                    itemStyle: {
                        normal: {
                            color: columnData[i].color[0]
                        }
                    }
                };
                this.seriesData.push(item);
                this.rich[columnData[i].sort].width = this.barWidth;
                this.rich[columnData[i].sort].backgroundColor = columnData[i].color[1] || columnData[i].color[0];
            }
            else {
                this.seriesData.push(columnData[i].value);
                if (this.data[columnData[i].sort].url) {
                    this.rich[columnData[i].sort].backgroundColor = {
                        image: this.data[columnData[i].sort].url
                    };
                }
            }
        }
    }
    ngOnInit() {
        let colData = this.data;
        this.option = {
            color: ['#79B7FB'],
            tooltip: {
                trigger: 'axis',
                axisPointer: {
                    type: 'line' // 默认为直线，可选为：'line' | 'shadow'
                },
                formatter: function (params) {
                    return colData[params[0].name].label + '</br>' + (params[0].value * 100).toFixed(1) + '%';
                },
            },
            grid: {
                containLabel: true
            },
            xAxis: [
                {
                    type: 'category',
                    data: this.xAxisData,
                    axisLabel: {
                        formatter: function (value) {
                            return '{' + value + '| }\n{value|' + (colData[value].label || value) + '}';
                        },
                        margin: 0,
                        interval: 0,
                        rich: this.rich
                    }
                },
                {
                    type: 'category',
                    axisTick: {
                        alignWithLabel: true
                    },
                    axisLabel: {
                        formatter: function (value) {
                            return (value * 100).toFixed(1) + '%';
                        },
                    },
                    data: this.xAxis2Data
                }
            ],
            yAxis: [
                {
                    show: true,
                    type: 'value',
                    axisLine: { show: false },
                    axisTick: {
                        show: false,
                        alignWithLabel: false
                    },
                    splitLine: { show: true },
                    axisLabel: {
                        show: false
                    }
                }
            ],
            series: [
                {
                    type: 'bar',
                    barWidth: this.barWidth,
                    data: this.seriesData
                }
            ]
        };
    }
    ngOnDestroy() {
    }
};
__decorate([
    core_1.Input(),
    __metadata("design:type", Array),
    __metadata("design:paramtypes", [Array])
], AgeComponent.prototype, "cmData", null);
AgeComponent = __decorate([
    core_1.Component({
        selector: 'cm-age',
        template: `
      <main class="age">
          <cm-chart [option]="option"></cm-chart>
      </main>
    `,
        styles: [`
      .age {
        width: 100%;
        height: 100%;
      }
    `]
    }),
    __metadata("design:paramtypes", [])
], AgeComponent);
exports.AgeComponent = AgeComponent;

//# sourceMappingURL=data:application/json;charset=utf8;base64,
