"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
const core_1 = require("@angular/core");
const convert_1 = require("./convert");
let TableDocComponent = class TableDocComponent {
    /////
    constructor(el) {
        this.el = el;
        this._pageSize = 10;
        this._current = 1;
        this._isInit = false;
        this._isAjax = false;
        this._dataSet = [];
        this.data = [];
        this._isPagination = true;
        this._showSizeChanger = false;
        this._showQuickJumper = false;
        this._showTotal = false;
        this._isPageIndexReset = true;
        this.nzPageSizeChange = new core_1.EventEmitter();
        this.nzPageIndexChange = new core_1.EventEmitter();
        this.nzPageIndexChangeClick = new core_1.EventEmitter();
        this.nzDataChange = new core_1.EventEmitter();
        this.nzPageSizeSelectorValues = [10, 20, 30, 40, 50];
    }
    /////
    set langleft(left) {
        this._langleft = left;
    }
    ;
    set langright(right) {
        this._langright = right;
    }
    ;
    set basics(basics) {
        this._basics = basics;
    }
    ;
    set frame(frame) {
        this._frame = frame;
    }
    ;
    set datas(data) {
        this._datas = data;
        // ;
        for (let i = 0; i < this._datas.length; i++) {
            if ("fixed" in this._datas[i]) {
                if (this._datas[i].fixed == "left") {
                    this._langleft = this._datas[i].fixed;
                    this._fixedwidthleft = this._datas[i].width;
                }
                if (this._datas[i].fixed == "right") {
                    this._langright = this._datas[i].fixed;
                    this._fixedwidthrigth = this._datas[i].width;
                    this._height = (this._datas.length + 1) * 32 + "px";
                    // ;
                }
            }
        }
    }
    ;
    set widthleft(fixedwidth) {
        this._fixedwidthleft = fixedwidth;
    }
    ;
    set widthright(fixedwidth) {
        this._fixedwidthrigth = fixedwidth;
    }
    ;
    ////////////////////////////
    set nzDataSource(value) {
        this._dataSet = value;
        this.nzTotal = this._dataSet.length;
        this._generateData(true);
    }
    get nzDataSource() {
        return this._dataSet;
    }
    set nzIsPagination(value) {
        this._isPagination = convert_1.toBoolean(value);
    }
    get nzIsPagination() {
        return this._isPagination;
    }
    set nzShowSizeChanger(value) {
        this._showSizeChanger = convert_1.toBoolean(value);
    }
    get nzShowSizeChanger() {
        return this._showSizeChanger;
    }
    set nzShowQuickJumper(value) {
        this._showQuickJumper = convert_1.toBoolean(value);
    }
    get nzShowQuickJumper() {
        return this._showQuickJumper;
    }
    set nzShowTotal(value) {
        this._showTotal = convert_1.toBoolean(value);
    }
    get nzShowTotal() {
        return this._showTotal;
    }
    set nzPageSize(value) {
        if (this._pageSize === value) {
            return;
        }
        this._pageSize = value;
        this._generateData();
        if (this._isInit) {
            this.nzPageSizeChange.emit(value);
        }
    }
    get nzPageSize() {
        return this._pageSize;
    }
    set nzTotal(value) {
        if (this._total === value) {
            return;
        }
        this._total = value;
    }
    get nzTotal() {
        return this._total;
    }
    set nzPageIndex(value) {
        if (this._current === value) {
            return;
        }
        this._current = value;
        this._generateData();
        this.nzPageIndexChange.emit(this.nzPageIndex);
    }
    get nzPageIndex() {
        return this._current;
    }
    set nzIsPageIndexReset(value) {
        this._isPageIndexReset = convert_1.toBoolean(value);
    }
    get nzIsPageIndexReset() {
        return this._isPageIndexReset;
    }
    _generateData(forceRefresh = false) {
        ;
        if (!this._isAjax) {
            if (this.nzIsPagination) {
                if (forceRefresh) {
                    if (this.nzIsPageIndexReset) {
                        this.nzPageIndex = 1;
                    }
                    else {
                        const maxPageIndex = Math.ceil(this._dataSet.length / this.nzPageSize);
                        this.nzPageIndex = !this.nzPageIndex ? 1 : (this.nzPageIndex > maxPageIndex ? maxPageIndex : this.nzPageIndex);
                    }
                }
                this.data = this._dataSet.slice((this.nzPageIndex - 1) * this.nzPageSize, this.nzPageIndex * this.nzPageSize);
            }
            else {
                this.data = this._dataSet;
            }
            this.nzDataChange.emit(this.data);
        }
    }
    pageChangeClick(value) {
        this.nzPageIndexChangeClick.emit(value);
    }
    ngOnInit() {
    }
    ;
    ngOnDestroy() {
    }
    ;
};
__decorate([
    core_1.Output(),
    __metadata("design:type", core_1.EventEmitter)
], TableDocComponent.prototype, "nzPageSizeChange", void 0);
__decorate([
    core_1.Output(),
    __metadata("design:type", core_1.EventEmitter)
], TableDocComponent.prototype, "nzPageIndexChange", void 0);
__decorate([
    core_1.Output(),
    __metadata("design:type", core_1.EventEmitter)
], TableDocComponent.prototype, "nzPageIndexChangeClick", void 0);
__decorate([
    core_1.Output(),
    __metadata("design:type", core_1.EventEmitter)
], TableDocComponent.prototype, "nzDataChange", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], TableDocComponent.prototype, "langleft", null);
__decorate([
    core_1.Input(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], TableDocComponent.prototype, "langright", null);
__decorate([
    core_1.ContentChild(core_1.TemplateRef),
    __metadata("design:type", core_1.TemplateRef)
], TableDocComponent.prototype, "template", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], TableDocComponent.prototype, "basics", null);
__decorate([
    core_1.Input(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], TableDocComponent.prototype, "frame", null);
__decorate([
    core_1.Input(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], TableDocComponent.prototype, "datas", null);
__decorate([
    core_1.Input(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], TableDocComponent.prototype, "widthleft", null);
__decorate([
    core_1.Input(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], TableDocComponent.prototype, "widthright", null);
__decorate([
    core_1.Input(),
    __metadata("design:type", Array),
    __metadata("design:paramtypes", [Array])
], TableDocComponent.prototype, "nzDataSource", null);
__decorate([
    core_1.Input(),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [Boolean])
], TableDocComponent.prototype, "nzIsPagination", null);
__decorate([
    core_1.Input(),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [Boolean])
], TableDocComponent.prototype, "nzShowSizeChanger", null);
__decorate([
    core_1.Input(),
    __metadata("design:type", Object)
], TableDocComponent.prototype, "nzPageSizeSelectorValues", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [Boolean])
], TableDocComponent.prototype, "nzShowQuickJumper", null);
__decorate([
    core_1.Input(),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [Boolean])
], TableDocComponent.prototype, "nzShowTotal", null);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], TableDocComponent.prototype, "nzSize", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Number),
    __metadata("design:paramtypes", [Number])
], TableDocComponent.prototype, "nzPageSize", null);
__decorate([
    core_1.Input(),
    __metadata("design:type", Number),
    __metadata("design:paramtypes", [Number])
], TableDocComponent.prototype, "nzTotal", null);
__decorate([
    core_1.Input(),
    __metadata("design:type", Number),
    __metadata("design:paramtypes", [Number])
], TableDocComponent.prototype, "nzPageIndex", null);
__decorate([
    core_1.Input(),
    __metadata("design:type", Boolean),
    __metadata("design:paramtypes", [Boolean])
], TableDocComponent.prototype, "nzIsPageIndexReset", null);
TableDocComponent = __decorate([
    core_1.Component({
        selector: 'cmt-table',
        template: `
      <div style="width:100%;overflow-x: auto;">
          <div *ngIf="_langleft=='left'" [ngStyle]="{'width':_fixedwidthleft}" style="position:absolute;top:0;box-shadow:rgba(0, 0, 0, 0.2) 2px 0px 6px -2px;overflow:hidden">
              <table [ngClass]="{'basics': _basics, 'frame':_frame}" cellspacing="0" cellpadding="0">
                  <!--basics:基础;frame:外框;-->
                  <ng-container [ngTemplateOutlet]="template"></ng-container>
              </table>
          </div>
          <div>
              <table [ngClass]="{'basics': _basics, 'frame':_frame}" cellspacing="0" cellpadding="0">
                  <ng-container [ngTemplateOutlet]="template"></ng-container>
              </table>
          </div>
          <div *ngIf="_langright=='right'" [ngStyle]="{'width':_fixedwidthrigth,'height':_height}" style="border:1px solid #ccc;border-left:none;border-bottom:none;width:200px;position:absolute;top:0;right:0;box-shadow:rgba(0, 0, 0, 0.2) -2px 0px 6px -2px;overflow:hidden">
              <div style="position:relative;">
                  <div style="position: absolute;right: 0;">
                      <table [ngClass]="{'basics': _basics}" cellspacing="0" cellpadding="0">
                          <ng-container [ngTemplateOutlet]="template"></ng-container>
                      </table>
                  </div>
              </div>
          </div>
      </div>
      <nz-pagination *ngIf="nzIsPagination&&data.length" [nzInTable]="true" [nzShowSizeChanger]="nzShowSizeChanger" [nzPageSizeSelectorValues]="nzPageSizeSelectorValues" [nzShowQuickJumper]="nzShowQuickJumper" [nzShowTotal]="nzShowTotal" [nzSize]="(nzSize=='middle'||nzSize=='small')?'small':''"
          [(nzPageSize)]="nzPageSize" [nzTotal]="nzTotal" [(nzPageIndex)]="nzPageIndex" (nzPageIndexClickChange)="pageChangeClick($event)">
      </nz-pagination>
    `,
        styles: [`
      table {
        border-collapse: collapse;
        border-spacing: 0;
      }
      .basics {
        width: 100%;
        table-layout: fixed;
      }
      .basics table tbody tr:hover {
        background: red;
      }
      .frame {
        border: 1px solid #cccccc;
      }
    `],
    }),
    __metadata("design:paramtypes", [core_1.ElementRef])
], TableDocComponent);
exports.TableDocComponent = TableDocComponent;

//# sourceMappingURL=data:application/json;charset=utf8;base64,
