"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
/* tslint:disable:member-ordering */
const core_1 = require("@angular/core");
let cmtborderright = class cmtborderright {
    constructor(el) {
        this.el = el;
    }
    set orient(orient) {
        this.el.nativeElement.style.borderRight = '1px solid #cccccc';
    }
};
__decorate([
    core_1.Input('cmtborderright'),
    __metadata("design:type", String),
    __metadata("design:paramtypes", [String])
], cmtborderright.prototype, "orient", null);
cmtborderright = __decorate([
    core_1.Directive({
        selector: '[cmtborderright]'
    }),
    __metadata("design:paramtypes", [core_1.ElementRef])
], cmtborderright);
exports.cmtborderright = cmtborderright;
/*
Copyright 2017 Google Inc. All Rights Reserved.
Use of this source code is governed by an MIT-style license that
can be found in the LICENSE file at http://angular.io/license
*/ 

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1c2luZXNzL3RhYmxlL2NtdGJvcmRlcnJpZ2h0LmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBLG9DQUFvQztBQUNwQyx3Q0FBNkQ7QUFLN0QsSUFBYSxjQUFjLEdBQTNCO0lBRUksWUFBb0IsRUFBYztRQUFkLE9BQUUsR0FBRixFQUFFLENBQVk7SUFBRyxDQUFDO0lBRWIsSUFBSSxNQUFNLENBQUMsTUFBYztRQUM5QyxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsV0FBVyxHQUFDLG1CQUFtQixDQUFDO0lBQ2hFLENBQUM7Q0FDSixDQUFBO0FBSDRCO0lBQXhCLFlBQUssQ0FBQyxnQkFBZ0IsQ0FBQzs7OzRDQUV2QjtBQU5RLGNBQWM7SUFIMUIsZ0JBQVMsQ0FBQztRQUNQLFFBQVEsRUFBRSxrQkFBa0I7S0FDL0IsQ0FBQztxQ0FHMEIsaUJBQVU7R0FGekIsY0FBYyxDQU8xQjtBQVBZLHdDQUFjO0FBUzNCOzs7O0VBSUUiLCJmaWxlIjoiYnVzaW5lc3MvdGFibGUvY210Ym9yZGVycmlnaHQuZGlyZWN0aXZlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogdHNsaW50OmRpc2FibGU6bWVtYmVyLW9yZGVyaW5nICovXG5pbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBEaXJlY3RpdmUoe1xuICAgIHNlbGVjdG9yOiAnW2NtdGJvcmRlcnJpZ2h0XSdcbn0pXG5leHBvcnQgY2xhc3MgY210Ym9yZGVycmlnaHQge1xuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBlbDogRWxlbWVudFJlZikge31cbiAgIFxuICAgIEBJbnB1dCgnY210Ym9yZGVycmlnaHQnKSBzZXQgb3JpZW50KG9yaWVudDogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMuZWwubmF0aXZlRWxlbWVudC5zdHlsZS5ib3JkZXJSaWdodD0nMXB4IHNvbGlkICNjY2NjY2MnO1xuICAgIH1cbn1cblxuLypcbkNvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG5Vc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0XG5jYW4gYmUgZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwOi8vYW5ndWxhci5pby9saWNlbnNlXG4qLyJdfQ==
