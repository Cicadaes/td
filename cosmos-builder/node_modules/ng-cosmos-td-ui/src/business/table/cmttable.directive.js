"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
/* tslint:disable:member-ordering */
const core_1 = require("@angular/core");
let cmttable = class cmttable {
    constructor(el) {
        this.el = el;
    }
    set orient(orient) {
        this.el.nativeElement.style.width = '100%';
        this.el.nativeElement.style.lineHeight = '21px';
        this.el.nativeElement.style.overflow = 'hidden';
        this.el.nativeElement.style.textOverflow = 'ellipsis';
        this.el.nativeElement.style.whiteSpace = 'nowrap';
        this.el.nativeElement.style.textAlign = 'left';
        this.el.nativeElement.style.padding = '5px';
    }
};
__decorate([
    core_1.Input('cmttable'),
    __metadata("design:type", String),
    __metadata("design:paramtypes", [String])
], cmttable.prototype, "orient", null);
cmttable = __decorate([
    core_1.Directive({
        selector: '[cmttable]'
    }),
    __metadata("design:paramtypes", [core_1.ElementRef])
], cmttable);
exports.cmttable = cmttable;
/*
Copyright 2017 Google Inc. All Rights Reserved.
Use of this source code is governed by an MIT-style license that
can be found in the LICENSE file at http://angular.io/license
*/ 

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1c2luZXNzL3RhYmxlL2NtdHRhYmxlLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBLG9DQUFvQztBQUNwQyx3Q0FBNkQ7QUFLN0QsSUFBYSxRQUFRLEdBQXJCO0lBRUksWUFBb0IsRUFBYztRQUFkLE9BQUUsR0FBRixFQUFFLENBQVk7SUFBRyxDQUFDO0lBRW5CLElBQUksTUFBTSxDQUFDLE1BQWM7UUFDeEMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLEtBQUssR0FBRyxNQUFNLENBQUM7UUFDM0MsSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLFVBQVUsR0FBRSxNQUFNLENBQUM7UUFDL0MsSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLFFBQVEsR0FBRSxRQUFRLENBQUM7UUFDL0MsSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLFlBQVksR0FBRyxVQUFVLENBQUM7UUFDdEQsSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLFVBQVUsR0FBRSxRQUFRLENBQUM7UUFDakQsSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLFNBQVMsR0FBRSxNQUFNLENBQUM7UUFDOUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLE9BQU8sR0FBRSxLQUFLLENBQUM7SUFDL0MsQ0FBQztDQUNKLENBQUE7QUFUc0I7SUFBbEIsWUFBSyxDQUFDLFVBQVUsQ0FBQzs7O3NDQVFqQjtBQVpRLFFBQVE7SUFIcEIsZ0JBQVMsQ0FBQztRQUNQLFFBQVEsRUFBRSxZQUFZO0tBQ3pCLENBQUM7cUNBRzBCLGlCQUFVO0dBRnpCLFFBQVEsQ0FhcEI7QUFiWSw0QkFBUTtBQWVyQjs7OztFQUlFIiwiZmlsZSI6ImJ1c2luZXNzL3RhYmxlL2NtdHRhYmxlLmRpcmVjdGl2ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIHRzbGludDpkaXNhYmxlOm1lbWJlci1vcmRlcmluZyAqL1xuaW1wb3J0IHsgRGlyZWN0aXZlLCBFbGVtZW50UmVmLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ1tjbXR0YWJsZV0nXG59KVxuZXhwb3J0IGNsYXNzIGNtdHRhYmxlIHtcblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgZWw6IEVsZW1lbnRSZWYpIHt9XG4gICBcbiAgICBASW5wdXQoJ2NtdHRhYmxlJykgc2V0IG9yaWVudChvcmllbnQ6IHN0cmluZykge1xuICAgICAgICB0aGlzLmVsLm5hdGl2ZUVsZW1lbnQuc3R5bGUud2lkdGggPSAnMTAwJSc7XG4gICAgICAgIHRoaXMuZWwubmF0aXZlRWxlbWVudC5zdHlsZS5saW5lSGVpZ2h0PSAnMjFweCc7XG4gICAgICAgIHRoaXMuZWwubmF0aXZlRWxlbWVudC5zdHlsZS5vdmVyZmxvdz0gJ2hpZGRlbic7XG4gICAgICAgIHRoaXMuZWwubmF0aXZlRWxlbWVudC5zdHlsZS50ZXh0T3ZlcmZsb3cgPSAnZWxsaXBzaXMnO1xuICAgICAgICB0aGlzLmVsLm5hdGl2ZUVsZW1lbnQuc3R5bGUud2hpdGVTcGFjZT0gJ25vd3JhcCc7XG4gICAgICAgIHRoaXMuZWwubmF0aXZlRWxlbWVudC5zdHlsZS50ZXh0QWxpZ249ICdsZWZ0JztcbiAgICAgICAgdGhpcy5lbC5uYXRpdmVFbGVtZW50LnN0eWxlLnBhZGRpbmc9ICc1cHgnO1xuICAgIH1cbn1cblxuLypcbkNvcHlyaWdodCAyMDE3IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG5Vc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0XG5jYW4gYmUgZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwOi8vYW5ndWxhci5pby9saWNlbnNlXG4qLyJdfQ==
