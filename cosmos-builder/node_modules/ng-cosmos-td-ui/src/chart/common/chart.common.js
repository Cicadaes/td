"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
const core_1 = require("@angular/core");
const chart_base_1 = require("./chart.base");
class ChartCommon extends chart_base_1.BaseChart {
    constructor() {
        super();
        this.chartOption = this.defineChartOption();
    }
    // 定义 echarts option
    defineChartOption() {
        return {};
    }
    // 通用option
    set option(option) {
        this.mergeChartOption(option);
    }
    set chartData(data) {
        this._chartData = data;
        this.mergeChartOption(this.chartDataChange(data));
    }
    chartDataChange(data) {
        return null;
    }
    set chartSettings(settings) {
        this._chartSettings = settings;
        this.mergeChartOption(this.chartSettingsChange(settings));
    }
    chartSettingsChange(Settings) {
        return null;
    }
    mergeChartOption(option) {
        Object.assign(this.chartOption, option);
        if (this.echarts && this.chartOption) {
            this.inputOption();
        }
    }
}
__decorate([
    core_1.ViewChild('canvas'),
    __metadata("design:type", core_1.ElementRef)
], ChartCommon.prototype, "canvas", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], ChartCommon.prototype, "option", null);
__decorate([
    core_1.Input(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], ChartCommon.prototype, "chartData", null);
__decorate([
    core_1.Input(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], ChartCommon.prototype, "chartSettings", null);
exports.ChartCommon = ChartCommon;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoYXJ0L2NvbW1vbi9jaGFydC5jb21tb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQSx3Q0FBNkQ7QUFDN0QsNkNBQXlDO0FBWXpDLGlCQUF5QixTQUFRLHNCQUFTO0lBSXRDO1FBQ0ksS0FBSyxFQUFFLENBQUM7UUFDUixJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO0lBQ2hELENBQUM7SUFFRCxvQkFBb0I7SUFDVixpQkFBaUI7UUFDdkIsT0FBTyxFQUFFLENBQUM7SUFDZCxDQUFDO0lBRUQsV0FBVztJQUNGLElBQUksTUFBTSxDQUFDLE1BQVc7UUFDM0IsSUFBSSxDQUFDLGdCQUFnQixDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ2xDLENBQUM7SUFJUSxJQUFJLFNBQVMsQ0FBQyxJQUFnQjtRQUNuQyxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQztRQUN2QixJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ3RELENBQUM7SUFFUyxlQUFlLENBQUMsSUFBZ0I7UUFDdEMsT0FBTyxJQUFJLENBQUM7SUFDaEIsQ0FBQztJQUlRLElBQUksYUFBYSxDQUFDLFFBQXdCO1FBQy9DLElBQUksQ0FBQyxjQUFjLEdBQUcsUUFBUSxDQUFDO1FBQy9CLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsbUJBQW1CLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztJQUM5RCxDQUFDO0lBRVMsbUJBQW1CLENBQUMsUUFBd0I7UUFDbEQsT0FBTyxJQUFJLENBQUM7SUFDaEIsQ0FBQztJQUVPLGdCQUFnQixDQUFDLE1BQVc7UUFDaEMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBQ3hDLElBQUksSUFBSSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsV0FBVyxFQUFFO1lBQ2xDLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztTQUN0QjtJQUNMLENBQUM7Q0FFSjtBQTlDd0I7SUFBcEIsZ0JBQVMsQ0FBQyxRQUFRLENBQUM7OEJBQVMsaUJBQVU7MkNBQUM7QUFhL0I7SUFBUixZQUFLLEVBQUU7Ozt5Q0FFUDtBQUlRO0lBQVIsWUFBSyxFQUFFOzs7NENBR1A7QUFRUTtJQUFSLFlBQUssRUFBRTs7O2dEQUdQO0FBbkNMLGtDQWdEQyIsImZpbGUiOiJjaGFydC9jb21tb24vY2hhcnQuY29tbW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5wdXQsIFZpZXdDaGlsZCwgRWxlbWVudFJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQmFzZUNoYXJ0IH0gZnJvbSBcIi4vY2hhcnQuYmFzZVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIElDaGFydERhdGEge1xuICAgIGNvbHVtbnM6IGFueVtdLFxuICAgIHJvd3M6IGFueVtdXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSUNoYXJ0U2V0dGluZ3Mge1xuICAgIGRpbWVuc2lvbj86IGFueTtcbiAgICBtZXRyaWNzPzogYW55O1xufVxuXG5leHBvcnQgY2xhc3MgQ2hhcnRDb21tb24gZXh0ZW5kcyBCYXNlQ2hhcnQge1xuXG4gICAgQFZpZXdDaGlsZCgnY2FudmFzJykgY2FudmFzOiBFbGVtZW50UmVmO1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuY2hhcnRPcHRpb24gPSB0aGlzLmRlZmluZUNoYXJ0T3B0aW9uKCk7XG4gICAgfVxuXG4gICAgLy8g5a6a5LmJIGVjaGFydHMgb3B0aW9uXG4gICAgcHJvdGVjdGVkIGRlZmluZUNoYXJ0T3B0aW9uKCk6IHt9IHtcbiAgICAgICAgcmV0dXJuIHt9O1xuICAgIH1cblxuICAgIC8vIOmAmueUqG9wdGlvblxuICAgIEBJbnB1dCgpIHNldCBvcHRpb24ob3B0aW9uOiBhbnkpIHtcbiAgICAgICAgdGhpcy5tZXJnZUNoYXJ0T3B0aW9uKG9wdGlvbik7XG4gICAgfVxuXG4gICAgLy8g5pWw5o2uXG4gICAgcHJvdGVjdGVkIF9jaGFydERhdGE6IElDaGFydERhdGE7XG4gICAgQElucHV0KCkgc2V0IGNoYXJ0RGF0YShkYXRhOiBJQ2hhcnREYXRhKSB7XG4gICAgICAgIHRoaXMuX2NoYXJ0RGF0YSA9IGRhdGE7XG4gICAgICAgIHRoaXMubWVyZ2VDaGFydE9wdGlvbih0aGlzLmNoYXJ0RGF0YUNoYW5nZShkYXRhKSk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIGNoYXJ0RGF0YUNoYW5nZShkYXRhOiBJQ2hhcnREYXRhKTogYW55IHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgLy8g6YWN572uXG4gICAgcHJvdGVjdGVkIF9jaGFydFNldHRpbmdzOiBJQ2hhcnRTZXR0aW5ncztcbiAgICBASW5wdXQoKSBzZXQgY2hhcnRTZXR0aW5ncyhzZXR0aW5nczogSUNoYXJ0U2V0dGluZ3MpIHtcbiAgICAgICAgdGhpcy5fY2hhcnRTZXR0aW5ncyA9IHNldHRpbmdzO1xuICAgICAgICB0aGlzLm1lcmdlQ2hhcnRPcHRpb24odGhpcy5jaGFydFNldHRpbmdzQ2hhbmdlKHNldHRpbmdzKSk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIGNoYXJ0U2V0dGluZ3NDaGFuZ2UoU2V0dGluZ3M6IElDaGFydFNldHRpbmdzKTogYW55IHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBtZXJnZUNoYXJ0T3B0aW9uKG9wdGlvbjogYW55KSB7XG4gICAgICAgIE9iamVjdC5hc3NpZ24odGhpcy5jaGFydE9wdGlvbiwgb3B0aW9uKTtcbiAgICAgICAgaWYgKHRoaXMuZWNoYXJ0cyAmJiB0aGlzLmNoYXJ0T3B0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLmlucHV0T3B0aW9uKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbn0iXX0=
