"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
const core_1 = require("@angular/core");
let cmFormComponent = class cmFormComponent {
    constructor(ref) {
        this.ref = ref;
        this.isCollapse = false;
        this.isShow = false;
    }
    ngOnInit() {
        this.toggleCollapse();
        setTimeout(() => {
            this.html = this.ref.nativeElement.querySelector('.leftBox');
            this.top = this.html.children[0]['offsetTop'];
            this.length = this.html.children.length;
            this.maxWidth = this.html.children[0]['offsetWidth'] + this.html.children[0]['offsetLeft'];
            this.maxTop = this.html.children[0]['offsetTop'];
            this.maxLeft = this.html.children[0]['offsetLeft'];
            for (var i = 0; i < this.length; i++) {
                if (this.html.children[i]['offsetTop'] > this.top) {
                    this.isShow = true;
                }
                if (this.html.children[i]['offsetTop'] > this.maxTop) {
                    this.maxTop = this.html.children[i]['offsetTop'];
                }
                if (this.html.children[i]['offsetLeft'] > this.maxLeft) {
                    this.maxLeft = this.html.children[i]['offsetLeft'];
                }
            }
            for (var i = 0; i < this.length; i++) {
                // console.log(this.maxTop,this.html.children[i]['offsetTop'])           
                if (this.html.children[i]['offsetTop'] == this.maxTop) {
                    // console.log(this.html.children[i])               
                    this.html.children[i].style.marginBottom = "0";
                }
                else {
                    this.html.children[i].style.marginBottom = "16px";
                }
            }
            for (var i = 0; i < this.length; i++) {
                // console.log(this.maxTop,this.html.children[i]['offsetTop'])           
                if (this.html.children[i]['offsetLeft'] == this.maxLeft) {
                    // console.log(this.html.children[i])               
                    this.html.children[i].style.marginRight = "0";
                }
                else {
                    this.html.children[i].style.marginRight = "24px";
                }
            }
        }, 0);
    }
    toggleCollapse() {
        this.isCollapse = !this.isCollapse;
        for (var i = 1; i < this.length; i++) {
            if (this.isCollapse == false && this.html.children[i]['offsetTop'] > this.top) {
                this.html.children[i]["style"]['display'] = "none";
            }
            else {
                this.html.children[i]["style"]['display'] = "";
            }
        }
        for (var i = 0; i < this.length; i++) {
            if (this.isCollapse == false) {
                this.html.children[i].style.marginBottom = "0";
            }
            else {
                this.html.children[i].style.marginBottom = "16px";
                // console.log(this.html.children[i]['offsetTop'],this.maxTop)
                if (this.html.children[i]['offsetTop'] == this.maxTop) {
                    // console.log(this.html.children[i])
                    this.html.children[i].style.marginBottom = "0";
                }
                else {
                    this.html.children[i].style.marginBottom = "16px";
                }
            }
        }
    }
    ngAfterViewInit() {
    }
};
cmFormComponent = __decorate([
    core_1.Component({
        selector: 'cm-from-layout',
        template: `
      <div class="form-layout">
          <div class="form-search">
              <ng-content selector="[left]"></ng-content>
              <ng-content selector="[right]"></ng-content>
              <a *ngIf="isShow" class="show" (click)="toggleCollapse()">
                  <i class="anticon" [class.anticon-down]="isCollapse" [class.anticon-up]="!isCollapse"></i>
              </a>
          </div>
      </div>
    `,
        styles: [`
      ::ng-deep .clearfix:after {
        content: "";
        display: block;
        height: 0;
        clear: both;
        visibility: hidden;
        overflow: hidden;
      }
      ::ng-deep .form-search {
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
      }
      ::ng-deep .form-search .form-item {
        display: inline-block;
        align-items: center;
        height: 32px;
        margin-bottom: 16px;
        margin-right: 24px;
        width: 270px;
      }
      ::ng-deep .form-search .form-item .form-item-input {
        display: flex;
        align-items: center;
        min-width: 220px;
      }
      ::ng-deep .form-search .form-item .lable {
        padding-right: 6px;
        min-width: 70px;
        text-align: right;
      }
      ::ng-deep .form-item-input .input {
        width: 200px;
      }
      ::ng-deep .leftBox {
        display: flex;
        flex-wrap: wrap;
      }
      ::ng-deep [left] {
        border-right: 1px solid #ddd;
        width: 100%;
        padding-right: 24px;
        flex: 3;
      }
      ::ng-deep [right] {
        padding-left: 24px;
        height: 100%;
      }
      ::ng-deep [right] .ant-btn.ant-btn-primary {
        width: 60px;
        height: 32px;
      }
      ::ng-deep .show {
        margin-left: 8px;
        font-size: 12px;
      }
    `]
    }),
    __metadata("design:paramtypes", [core_1.ElementRef])
], cmFormComponent);
exports.cmFormComponent = cmFormComponent;

//# sourceMappingURL=data:application/json;charset=utf8;base64,
